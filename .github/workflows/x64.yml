name: Build OpenWrt

on:
#  release:
#    types: [published]
  push:
    branches:
      - master
    paths:
      - 'x64.config'
      - '.github/workflows/x64.yml'
#  schedule:
#    - cron: 0 19 * * *
#  watch:
#    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede.git
  REPO_BRANCH: master
  CONFIG_FILE: x64.config
  DIY_SH: diy.sh
  SSH_ACTIONS: true
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai
  FILE_NAME: X64-Openwrt-$(date +%m%d)

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Clone source code # 克隆的源代码
      id: openwrt
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "::set-env name=useVersionInfo::$useVersionInfo"
        echo "::set-env name=DATE::$(date "+%Y-%m-%d %H:%M:%S")"
        echo "::set-env name=tag_name::$(date +%Y%m%d)"
      
    - name: Clone other packages
      run: |
        git clone https://github.com/project-openwrt/luci-app-koolproxyR.git openwrt/package/luci-app-koolproxyR
      
    - name: Update Feeds
      run: |
       cd openwrt
       echo "src-git kenzo https://github.com/kenzok8/openwrt-packages" >> feeds.conf.default
       echo "src-git small https://github.com/kenzok8/small" >> feeds.conf.default
       ./scripts/feeds update -a
       ./scripts/feeds install -a
              
    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
     #若使用./scripts/diffconfig.sh > config.seed生成的差异文件恢复扩展为完整的.config配置文件请删除下行注释符号
     #   make defconfig

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        ./scripts/diffconfig.sh > seed.config     
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"
    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_directory
        path: openwrt/bin
    
    - name: Upload Config
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.SSH_ACTIONS == 'true'
      with:
        name: OpenWrt_config
        path: openwrt/.config

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"
    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}
         
